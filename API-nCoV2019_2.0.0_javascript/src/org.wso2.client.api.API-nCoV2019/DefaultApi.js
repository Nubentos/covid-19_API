/**
 * API-nCoV2019
 * nCoV 2019 API provides information related with the case of pneumonia associated with the COVID-19 coronavirus.  The data we provide is collected from World Health Organization (WHO), the US Centers for Disease Control and Prevention (CDC), the Chinese Centre for Disease Control and Prevention (ECDC), Chinaâ€™s National Health Commission, and Chinese website DXY which provides regional case estimates faster than the national level reporting organizations.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'org.wso2.client.model.API-nCoV2019/ResultCases', 'org.wso2.client.model.API-nCoV2019/ResultCasesCountry'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../org.wso2.client.model.API-nCoV2019/ResultCases'), require('../org.wso2.client.model.API-nCoV2019/ResultCasesCountry'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiNCoV2019) {
      root.ApiNCoV2019 = {};
    }
    root.ApiNCoV2019.DefaultApi = factory(root.ApiNCoV2019.ApiClient, root.ApiNCoV2019.ResultCases, root.ApiNCoV2019.ResultCasesCountry);
  }
}(this, function(ApiClient, ResultCases, ResultCasesCountry) {
  'use strict';

  /**
   * Default service.
   * @module org.wso2.client.api.API-nCoV2019/DefaultApi
   * @version 1.0.0
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:org.wso2.client.api.API-nCoV2019/DefaultApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the activeGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~activeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Active cases
     * Active cases
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~activeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.activeGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/active', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the casesGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~casesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Total of active cases.
     * Summary of suspected and confirmed
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~casesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.casesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/cases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the casesPerOneMillionGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~casesPerOneMillionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cases per Million
     * Cases per Million
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~casesPerOneMillionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.casesPerOneMillionGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/casesPerOneMillion', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the criticalGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~criticalGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Critical cases
     * Critical cases
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~criticalGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.criticalGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/critical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deathsGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~deathsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Total of persons death.
     * Total of person death because a direct relation ship with 2019 - NCoV
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~deathsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.deathsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/deaths', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deathsPerOneMillionGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~deathsPerOneMillionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deaths per Million
     * Deaths per Million
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~deathsPerOneMillionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.deathsPerOneMillionGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/deathsPerOneMillion', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the recoveredGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~recoveredGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Recovered cases
     * Recovered cases
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~recoveredGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.recoveredGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/recovered', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the testsPerOneMillionGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~testsPerOneMillionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test Per Million
     * Test Per Million
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~testsPerOneMillionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.testsPerOneMillionGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/testsPerOneMillion', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the todayCasesGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~todayCasesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCasesCountry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Today cases.
     * Number of registered cases today
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~todayCasesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCasesCountry}
     */
    this.todayCasesGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCasesCountry;

      return this.apiClient.callApi(
        '/todayCases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the todayDeathsGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~todayDeathsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Today deaths.
     * Number of deaths today
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~todayDeathsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.todayDeathsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/todayDeaths', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the totalTestsGet operation.
     * @callback module:org.wso2.client.api.API-nCoV2019/DefaultApi~totalTestsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:org.wso2.client.model.API-nCoV2019/ResultCases} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test Totals
     * Tests total
     * @param {Object} opts Optional parameters
     * @param {Array.<module:org.wso2.client.model.API-nCoV2019/String>} opts.country 
     * @param {module:org.wso2.client.api.API-nCoV2019/DefaultApi~totalTestsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:org.wso2.client.model.API-nCoV2019/ResultCases}
     */
    this.totalTestsGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'country': this.apiClient.buildCollectionParam(opts['country'], 'csv')
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = ResultCases;

      return this.apiClient.callApi(
        '/totalTests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
